#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>
echo "udhcpc-zte.script start ..."
[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
RESOLV_CONF_WIFI="/etc/resolv.conf-zte"
route_wifi_flag="/tmp/route_wifi.flag"

[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

# return 0 if root is mounted on a network filesystem
root_is_nfs() {
    grep -qe '^/dev/root.*\(nfs\|smbfs\|ncp\|coda\) .*' /proc/mounts
}

have_bin_ip=0
if [ -x /bin/ip ]; then
  have_bin_ip=1
fi

case "$1" in
    deconfig)
        if ! root_is_nfs ; then
                        if [ $have_bin_ip -eq 1 ]; then
                                ip addr flush dev $interface
                                #ip link set dev $interface up
                        else
                                /sbin/ifconfig $interface 0.0.0.0
                        fi
        fi
        ;;

    renew|bound)
        if [ $have_bin_ip -eq 1 ]; then
                ip addr add dev $interface local $ip/$mask $BROADCAST
        else
                /sbin/ifconfig $interface $ip $BROADCAST $NETMASK
        fi
        
        echo "get ip $ip"
        zte_nvc_apps w station_ip_addr $ip

        for i in $router ; do
           echo "router $i"
           zte_nvc_apps w station_gw_by_dhcp $i
        done

        echo "add dns server to $RESOLV_CONF_WIFI"
        echo -n > $RESOLV_CONF_WIFI
        [ -n "$domain" ] && echo "search $domain" >> $RESOLV_CONF_WIFI
        for i in $dns ; do
            echo " Adding DNS server $i"
            echo "nameserver $i" >> $RESOLV_CONF_WIFI
        done

        if [ -f $route_wifi_flag ]; then
          echo "Router is wifi"
          echo "Deleting routers"
          metric=0
          ip route del default
          ip route del default
          ip route del default
          ip route del default
          gw_dhcp_addr=`zte_nvc_apps read station_gw_by_dhcp`
          echo "Adding router $gw_dhcp_addr"
          route add default gw $gw_dhcp_addr dev $interface
          echo "Recreating $RESOLV_CONF by $RESOLV_CONF_WIFI"
          cp -fr $RESOLV_CONF_WIFI $RESOLV_CONF
        else
          echo "Router is 3G/4G"
        fi

esac

exit 0
